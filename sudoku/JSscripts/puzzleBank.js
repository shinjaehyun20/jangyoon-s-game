// 스도쿠 퍼즐 뱅크 - 각 난이도별 여러 퍼즐 세트
// 형식: 81자 문자열 (9x9 그리드를 행 우선 순서로 나열, 0은 빈 칸)

const PUZZLE_BANK = {
    easy: [
        // Easy Puzzle 1 (기존)
        "304069050000270004902004000020085019809000205510390060000800503200046000040750906",
        // Easy Puzzle 2
        "530070000600195000098000060800060003400803001700020006060000280000419005000080079",
        // Easy Puzzle 3
        "200080300060070084030500209000105408000000000402706000301007040720040060004010003",
        // Easy Puzzle 4
        "000260701680070090190004500820100040004602900050003028009300074040050036703018000",
        // Easy Puzzle 5
        "100489006730000040000001295007120600500703008006095700914600000020000037800512004",
        // Easy Puzzle 6
        "062340750100005600570000040000094800400208009008350000030000091006400005019062370",
        // Easy Puzzle 7
        "300200000000107000706030500070009080900020004010800050009040301000702000000008006"
    ],
    medium: [
        // Medium Puzzle 1 (기존)
        "040005800002831000000090305010000940830010056029000070705080000000159400001200030",
        // Medium Puzzle 2
        "020608000580009700000040000370000500600000004008000013000020000009800036000306090",
        // Medium Puzzle 3
        "000900002050123400030000160908000000070000090000000205091000050007439020400007000",
        // Medium Puzzle 4
        "200300000804062003000000860000400800070010090006007000035000000600270500000009007",
        // Medium Puzzle 5
        "000125400008400000420800000030000094180000000006003080000004200000700800009000007",
        // Medium Puzzle 6
        "062300000100005600000000040000094800400200009008050000090000001006400005000007040",
        // Medium Puzzle 7
        "300005001008706000600000080000200009090010040700009000040000005000508900800400007"
    ],
    hard: [
        // Hard Puzzle 1 (기존)
        "000037600000600090008000004090000001600000009300000040700000800010009000002540000",
        // Hard Puzzle 2
        "030000080009000500007509200700105008020090070900402001006803400000000010000000000",
        // Hard Puzzle 3
        "200000000000600300040300005004094000000000001000020600500200000000000040000800700",
        // Hard Puzzle 4
        "000003017015009008060000000100007000009000200000500004000000020500600340340200000",
        // Hard Puzzle 5
        "200070038000006005000108000900000000005403600000007000000300000010004600250000004",
        // Hard Puzzle 6
        "000000000904200007000000090000000850700091200000000000040000000020000504000700100",
        // Hard Puzzle 7
        "030600000000090050001004700050201000002000680000607020009100000006020030000003000"
    ]
};

/**
 * 주어진 난이도에서 랜덤으로 퍼즐을 선택
 * @param {string} difficulty - 'easy', 'medium', 'hard' 중 하나
 * @returns {string} 81자 스도쿠 퍼즐 문자열 (0은 빈 칸을 의미)
 */
function getRandomPuzzle(difficulty) {
    const puzzles = PUZZLE_BANK[difficulty];
    if (!puzzles || puzzles.length === 0) {
        console.error('No puzzles found for difficulty:', difficulty);
        return PUZZLE_BANK.easy[0]; // fallback
    }
    const randomIndex = Math.floor(Math.random() * puzzles.length);
    return puzzles[randomIndex];
}

/**
 * 81자 문자열을 Test_Cases 텍스트 형식으로 변환
 * (첫 줄: 9, 이후 9줄: 각 행을 공백으로 구분)
 * @param {string} puzzleString - 81자 퍼즐 문자열
 * @returns {string} 텍스트 파일 형식
 */
function puzzleStringToTextFormat(puzzleString) {
    let result = "9\n";
    for (let i = 0; i < 9; i++) {
        const row = puzzleString.substr(i * 9, 9).split('').join(' ');
        result += row + "\n";
    }
    return result;
}

/**
 * 텍스트 형식을 81자 문자열로 파싱 (Test_Cases에서 읽어온 내용 처리용)
 * @param {string} text - 텍스트 파일 내용
 * @returns {string} 81자 퍼즐 문자열
 */
function textFormatToPuzzleString(text) {
    const lines = text.trim().split('\n').slice(1); // 첫 줄(9) 제외
    let puzzleString = '';
    lines.forEach(line => {
        puzzleString += line.replace(/\s+/g, '');
    });
    return puzzleString.replace(/\./g, '0'); // '.'을 '0'으로 통일
}
